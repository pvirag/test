{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/friends.json","tests/tests.js","tests/unit/process-data.js","tests/unit/pretify-name.js","tests/unit/id-generator.js","tests/unit/generate-friends-message.js","tests/unit/generate-room-data.js","js/modules/process-data.js","js/modules/pretify-name.js","js/modules/id-generator.js","js/modules/generate-friends-message.js","js/modules/generate-room-data.js"],"names":["require","processData","customData","test","item1","tests","describe","it","assert","isObject","response","deepEqual","undefined","property","pretifyName","singleWord","hyphenatedWord","spacedWord","combinedWord","isUndefined","blah","idGenerator","generateMessage","noFriends","oneFriend","twoFriends","threeFriends","fourFriends","manyFriends","isString","generateRoomData","isArray","data","verify","item","forEach","module","exports","dataFile","name","fixedName","replace","prettyName","part","toUpperCase","toLowerCase","friends","Array","length","message","chosenOnes","remaining","friendsCount","messageSuffix","messageOtherFriend","sort","join","slice","roomName","friendsData","id","generateId","getRoomsData","roomsData","room","hasOwnProperty","push"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\"deluxe\":{\"friends\":[\"Bob Smith\",\"Jane Doe\",\"Bubba Hyde\",\"Betsy Toheavens\"]},\"shared\":{\"friends\":[\"Bob Smith\"]},\"animal-friendly\":{\"friends\":[\"Bob Smith\",\"Jane Doe\",\"Bubba Hyde\"]},\"another\":{\"friends\":[\"Bob Smith\",\"Jane Doe\"]},\"and-another\":{\"friends\":[]}}","'use strict';\n\n/**\n * Unit tests\n */\n\nrequire('./unit/process-data');\nrequire('./unit/pretify-name');\nrequire('./unit/id-generator');\nrequire('./unit/generate-friends-message');\nrequire('./unit/generate-room-data');\n\n/**\n * Functional tests\n */\n//require('./functional/test-accordion');\n","'use strict';\n\nvar processData = require('../../js/modules/process-data'),\n    customData = {\"test\": \"betty\",\"item1\": \"pop\"};\n\nvar tests = function() {\n    describe(\n        'PROCESS-DATA',\n        function() {\n            it('Returns an object',\n                function() {\n                    assert.isObject(processData());\n                }\n            );\n\n            it('Returns custom data file',\n                function() {\n                    assert.isObject(processData(customData));\n                }\n            );\n\n            it('Object\\'s key \\'test\\' is \\'betty\\'', function() {\n                    var response = processData(customData)\n                    assert.deepEqual(response.test, 'betty');\n                }\n            );\n\n            it('Returns default data file if \\'undefined\\' is passed',\n                function() {\n                    var response = processData(undefined)\n                    assert.isObject(response);\n                    assert.property(response, 'deluxe');\n                }\n            );\n\n            it('Returns default data file if \\'null\\' is passed',\n                function() {\n                    var response = processData(null);\n                    assert.isObject(response);\n                    assert.property(response, 'deluxe');\n                }\n            );\n    });\n};\n\ntests();\n","'use strict';\n\nvar pretifyName = require('../../js/modules/pretify-name'),\n    singleWord = 'lovely',\n    hyphenatedWord = 'very-lovely',\n    spacedWord = 'extremely lovely',\n    combinedWord = 'very-very lovely';\n\nvar tests = function() {\n    describe(\n        'PRETIFY NAME',\n        function() {\n            it('Do not run no string',\n                function() {\n                    assert.isUndefined(pretifyName());\n                }\n            );\n\n            it('Do not run if empty an string',\n                function() {\n                    assert.isUndefined(pretifyName(''));\n                }\n            );\n\n            it('Do not run if not a string',\n               function() {\n                    assert.isUndefined(pretifyName(undefined));\n                    assert.isUndefined(pretifyName(['a', 'b']));\n                    assert.isUndefined(pretifyName({'blah': 'muh'}));\n               }\n            );\n\n            it('Return captilized \\'lovely\\'',\n                function() {\n                    assert.deepEqual(pretifyName(singleWord),\n                        'Lovely');\n                }\n            );\n\n            it('Return captilized \\'extremely lovely\\'',\n                function() {\n                    assert.deepEqual(pretifyName(hyphenatedWord),\n                        'Very Lovely');\n                }\n            );\n\n            it('Return captilized \\'very-lovely\\', replace hyphen with space',\n                function() {\n                    assert.deepEqual(pretifyName(spacedWord),\n                        'Extremely Lovely');\n                }\n            );\n\n            it('Return captilized \\'very-very lovely\\', replace hyphen with space',\n                function() {\n                    assert.deepEqual(pretifyName(combinedWord),\n                        'Very Very Lovely');\n                }\n            );\n    });\n};\n\ntests();\n","'use strict';\n\nvar idGenerator = require('../../js/modules/id-generator'),\n    singleWord = 'lovely',\n    hyphenatedWord = 'very-lovely',\n    spacedWord = 'extremely lovely',\n    combinedWord = 'very-very lovely';\n\nvar tests = function() {\n    describe(\n        'GENERATE ID',\n        function() {\n            it('Do not run no string',\n                function() {\n                    assert.isUndefined(idGenerator());\n                }\n            );\n\n            it('Do not run if empty an string',\n                function() {\n                    assert.isUndefined(idGenerator(''));\n                }\n            );\n\n            it('Do not run if not a string',\n               function() {\n                    assert.isUndefined(idGenerator(undefined));\n                    assert.isUndefined(idGenerator(['a', 'b']));\n                    assert.isUndefined(idGenerator({'blah': 'muh'}));\n               }\n            );\n\n            it('Return captilized \\'lovely\\'',\n                function() {\n                    assert.deepEqual(idGenerator(singleWord),\n                        'lovely');\n                }\n            );\n\n            it('Return captilized \\'extremely lovely\\'',\n                function() {\n                    assert.deepEqual(idGenerator(hyphenatedWord),\n                        'very-lovely');\n                }\n            );\n\n            it('Return captilized \\'very-lovely\\', replace hyphen with space',\n                function() {\n                    assert.deepEqual(idGenerator(spacedWord),\n                        'extremely-lovely');\n                }\n            );\n\n            it('Return captilized \\'very-very lovely\\', replace hyphen with space',\n                function() {\n                    assert.deepEqual(idGenerator(combinedWord),\n                        'very-very-lovely');\n                }\n            );\n    });\n};\n\ntests();\n","'use strict';\n\nvar generateMessage = require('../../js/modules/generate-friends-message'),\n    noFriends = [],\n    oneFriend = ['Jerry Mo'],\n    twoFriends = ['Jerry Mo', 'Adam Lo'],\n    threeFriends = ['Jerry Mo', 'Adam Lo', 'Hernand Fo'],\n    fourFriends = ['Jerry Mo', 'Adam Lo', 'Hernand Fo', 'Abe Ade'],\n    manyFriends = ['Jerry Mo', 'Adam Lo', 'Hernand Fo', 'Abe Ade', 'Tu Szu', 'Laszlo Horvath'];\n\nvar tests = function() {\n    describe(\n        'GENERATE FRIENDS MESSAGE',\n        function() {\n            it('Do not run if no data',\n                function() {\n                    assert.isUndefined(generateMessage());\n                }\n            );\n\n            it('Do not run if empty an array',\n                function() {\n                    assert.isUndefined(generateMessage(noFriends));\n                }\n            );\n\n            it('Do not run if data is not an array',\n                function() {\n                    assert.isUndefined(generateMessage({'blah': 2}));\n                    assert.isUndefined(generateMessage(true));\n                    assert.isUndefined(generateMessage(undefined));\n                    assert.isUndefined(generateMessage('betty'));\n                }\n            );\n\n            it('Returns string if data is correct type ofarray',\n                function() {\n                    assert.isString(generateMessage(oneFriend));\n                }\n            );\n\n            it('For single friend return: Jerry Mo has stayed here',\n                function() {\n                    assert.deepEqual(generateMessage(oneFriend),\n                        'Jerry Mo has stayed here');\n                }\n            );\n\n            it('For 2 friends sort and return: Adam Lo and Jerry Mo have stayed here',\n                function() {\n                    assert.deepEqual(generateMessage(twoFriends),\n                        'Adam Lo and Jerry Mo have stayed here');\n                }\n            );\n\n            it('For 3 friends sort and return: Adam Lo, Hernand Fo and 1 other friend have stayed here',\n                function() {\n                    assert.deepEqual(generateMessage(threeFriends),\n                        'Adam Lo, Hernand Fo and 1 other friend have stayed here');\n                }\n            );\n\n            it('For 4 friends sort and return: Abe Ade, Adam Lo and 2 other friends have stayed here',\n                function() {\n                    assert.deepEqual(generateMessage(fourFriends),\n                        'Abe Ade, Adam Lo and 2 other friends have stayed here');\n                }\n            );\n\n            it('For 6 friends sort and return: Abe Ade, Adam Lo and 4 other friends have stayed here',\n                function() {\n                    assert.deepEqual(generateMessage(manyFriends),\n                        'Abe Ade, Adam Lo and 4 other friends have stayed here');\n                }\n            );\n    });\n};\n\ntests();\n","'use strict';\n\nvar generateRoomData = require('../../js/modules/generate-room-data');\n\nvar tests = function() {\n    describe(\n        'GENERATE ROOM DATA',\n        function() {\n            it('Returns array',\n                function() {\n                    assert.isArray(generateRoomData());\n                }\n            );\n\n            it('Array contains objects',\n                function() {\n                    var data = generateRoomData();\n                    assert.isObject(data[0]);\n                }\n            );\n\n            it('Each object to have \\'name\\', \\'message\\' and \\'id\\' keys',\n                function() {\n                    var data = generateRoomData(),\n                        item = data[0];\n\n                    function verify(item) {\n                        assert.property(item, 'name');\n                        assert.property(item, 'message');\n                        assert.property(item, 'id');\n                    }\n\n                    data.forEach(verify);\n                }\n            );\n    });\n};\n\ntests();\n","'use strict';\n\nvar data = require('../friends.json');\n\n/**\n * processData\n * @param  {JSON} dataFile as json file dependency\n * @return {JSON}\n */\n\nmodule.exports = function processData(dataFile) {\n    if (!dataFile) {\n        return data;\n    }\n    return dataFile;\n};\n","'use strict';\n\n/**\n * pretifyName replaces '-' with spaces and capitalize\n * @param  {string} name\n * @return {string}\n */\n\nmodule.exports = function pretifyName(name) {\n    if (!name || name === '' || typeof name !== 'string') {\n        return;\n    }\n\n    var fixedName = name.replace(/(\\-|\\s)/, ' '),\n        prettyName = fixedName.replace(/(?:^|\\s)\\S/g , function(part) {\n            return part.toUpperCase();\n        });\n\n    return prettyName;\n};\n","'use strict';\n\n/**\n * generateId generate hyphenated lowercase string\n * @param  {string} name\n * @return {string}\n */\n\nmodule.exports = function generateId(name) {\n    if (!name || name === '' || typeof name !== 'string') {\n        return;\n    }\n\n    var fixedName = name.replace(/\\s/, '-');\n\n    return fixedName.toLowerCase();\n};\n","'use strict';\n\n/**\n * generateMessage\n * @param  {array} friends\n * @return {string} compiled message for nr of friends\n */\n\nmodule.exports = function generateMessage(friends) {\n    if (!friends || !Array.isArray(friends) || !friends.length) {\n        return;\n    }\n\n    var friendsCount = friends.length,\n        messageSuffix = ' stayed here',\n        messageOtherFriend = ' other friend',\n        message,\n        chosenOnes,\n        remaining;\n\n    if (friendsCount > 1) {\n        friends.sort();\n    }\n\n    if (friendsCount === 1) {\n        message = friends[0] + ' has' + messageSuffix;\n\n        return message;\n    }\n\n    if (friendsCount === 2) {\n        message = friends.join(' and ') + ' have' +\n            messageSuffix;\n\n        return message;\n    }\n\n    if (friendsCount > 2) {\n        chosenOnes = friends.slice(0,2);\n        remaining = friendsCount - 2;\n\n        message = chosenOnes.join(', ') + ' and ' + remaining +\n            messageOtherFriend +\n            (remaining > 1 ? 's' : '')  +\n            ' have' + messageSuffix;\n\n        return message;\n    }\n};\n","'use strict';\n\nvar getRoomsData = require('./process-data'),\n    generateMessage = require('./generate-friends-message'),\n    generateId = require('./id-generator'),\n    pretifyName = require('./pretify-name'),\n    roomsData = getRoomsData();\n\n/**\n * generateRoomData\n * @param  {string} roomName\n * @param  {array} friendsData\n * @return {object}\n */\n\nfunction generateRoomData(roomName, friendsData) {\n    if (!roomName || !friendsData ||\n        typeof roomName !== 'string' ||\n        !Array.isArray(friendsData)) {\n\n        return;\n    }\n\n    var response = {\n        name: pretifyName(roomName),\n        message: generateMessage(friendsData),\n        id: generateId(roomName)\n    };\n\n    return response;\n}\n\n/**\n * generateRoomsConfig\n * @return {array} array of room data objects\n */\n\nmodule.exports = function generateRoomsConfig() {\n    var room,\n        name,\n        friends,\n        response = [];\n\n    for (room in roomsData) {\n        if (roomsData.hasOwnProperty(room)) {\n            name = room;\n\n            if (roomsData[room].hasOwnProperty('friends')) {\n                friends = roomsData[room].friends;\n                response.push(generateRoomData(name, friends));\n            }\n        }\n    }\n\n    return response;\n};\n"]}